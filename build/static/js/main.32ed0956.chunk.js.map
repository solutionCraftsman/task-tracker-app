{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAddBtnClick","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","length","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32ed0956.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n    /*const onClick = () => {\n        console.log('click')\n    }*/\n\n    //passing in the event object\n    /*const onClick = (e) => {\n        console.log(e)\n    }*/\n\n    return (\n        // <button className='btn'>Add</button>\n        <button\n            onClick={onClick}\n            style={{\n                backgroundColor: color\n            }}\n            className='btn'>\n            {text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func\n}\n\nexport default Button","\nimport React from 'react'\n//used to be required for every react component, but not anymore\n\nimport PropTypes from 'prop-types'\n\nimport Button from './Button'\n//const Header = (props) => {\nconst Header = ({ title, onAddBtnClick, showAdd }) => {\n    const onClick = () => {\n        console.log('Click')\n    }\n\n    return (\n        <header className='header'>\n            {/*<h1>Task tracker</h1>*/}\n            {/*<h1>{props.title}</h1>*/}\n            {/*<h1 style={{color: 'red', backgroundColor: 'black'}}>{title}</h1>*/}\n            {/*<h1 style={ headingStyle }>{title}</h1>*/}\n            <h1>{title}</h1>\n            {/*<Button color='green' text='Add' onClick={onAddBtnClick} />*/}\n            <Button color={showAdd ? 'red' : 'green'} text={showAdd ? 'Close' : 'Add'} onClick={onAddBtnClick} />\n            {/*<Button color='blue' text='Hello 1' />*/}\n            {/*<Button color='red' text='Hello 2' />*/}\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    // title: 'Task tracker, default title'\n    title: 'Task tracker'\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n/*const headingStyle = {\n    color: 'red', backgroundColor: 'black'\n}*/\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ( {task, onDelete, onToggle} ) => {\n    return (\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\n            <h3>{task.text}\n            <FaTimes style={{ color: 'red', cursor: 'pointer'}}\n                     //onClick={onDelete}\n                     //onClick={onDelete(task.id)}\n                     onClick={() => onDelete(task.id)}\n            />\n            </h3>\n            <h3>{task.day}</h3>\n        </div>\n    )\n}\n\nexport default Task","//import { useState } from 'react'\nimport Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n\n    return (\n        //setTasks([...tasks, {}])\n        <>\n            {/*{tasks.map(\n                task => (\n                    <h3 key={task.id}>\n                        {task.text}\n                    </h3>\n                )\n            )}*/}\n            {\n                tasks.length > 0 ? (\n                    tasks.map(\n                        task => <Task key={task.id} task={task} onDelete={onDelete}\n                        onToggle={onToggle}/>\n                    )\n                ) : (\n                    'No Tasks to show'\n                )\n            }\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n    const [text, setText] = useState('')\n    const [day, setDay] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = e => {\n        e.preventDefault() //to ensure it does not submit the page\n\n        if(!text) {\n            alert('Please add a task')\n            return\n        }\n\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDay('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' value={text}\n                       onChange={e => setText(e.target.value)}/>\n            </div>\n            <div className='form-control'>\n                <label>Day & Time</label>\n                <input type='text' placeholder='Day & Time'\n                       value={day}\n                       onChange={e => setDay(e.target.value)}/>\n            </div>\n            <div className='form-control form-control-check'>\n                <label>Set Reminder</label>\n                <input type='checkbox'\n                       checked={reminder}\n                       value={reminder}\n                       onChange={e => setReminder(e.currentTarget.checked)}/>\n            </div>\n\n            <input className='btn btn-block' type='submit' value='Save Task' />\n        </form>\n    )\n}\n\nexport default AddTask","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n\n    const [showAddTask, setShowAddTask] = useState(false)\n\n    const [tasks, setTasks] = useState([\n        {\n            id: 1,\n            text: \"Doctors Appointment\",\n            day: \"Feb 5th at 2:30pm\",\n            reminder: true\n        },\n        {\n            id: 2,\n            text: \"Meeting at School\",\n            day: \"Feb 6th at 1:30pm\",\n            reminder: true\n        },\n        {\n            id: 3,\n            text: 'Food Shopping',\n            day: \"Feb 5th at 2:30pm\",\n            reminder: false\n        }\n    ])\n\n    //Add Task\n    const addTask = (task) => {\n        //console.log(task)\n        const id = Math.floor(Math.random() * 10000) +1\n        const newTask = { id, ...task }\n        setTasks([...tasks, newTask])\n    }\n\n    //Delete Task\n    const deleteTask = (id) => {\n        //console.log('delete', id)\n        setTasks(tasks.filter\n            (task => task.id !== id)\n        )\n    }\n\n    //Toggle Reminder\n    const toggleReminder = (id) => {\n        //console.log(id)\n        setTasks(tasks.map\n            (task => task.id === id ?\n                { ...task, reminder: !task.reminder} :\n                task\n            )\n        )\n    }\n\n    return (\n        <div className=\"container\">\n            {/*<Header title='Hello' />*/}\n            <Header onAddBtnClick={() => setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n            {showAddTask && <AddTask onAdd={addTask} />}\n            <Tasks tasks={tasks} onDelete={deleteTask}\n            onToggle={toggleReminder}/>\n        </div>\n    );\n}\n\n//Class based component\n/*import React from 'react'\nclass App extends React.Component {\n    render() {\n        return (\n            //<h1>Hello from a class</h1>\n            <div className=\"container\">\n                <Header />\n            </div>\n        )\n    }\n}*/\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//we're inserting our app into that root\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}